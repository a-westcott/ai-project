BOOM = 'BOOM'
MOVE = 'MOVE'
MAX_TURNS = 250
ALL = [(0,0),(0,1),(0,2),(0,3),(0,4),(0,5),(0,6),(0,7),(1,0),(1,1),(1,2),(1,3),(1,4),(1,5),(1,6),(1,7),
       (2,0),(2,1),(2,2),(2,3),(2,4),(2,5),(2,6),(2,7),(3,0),(3,1),(3,2),(3,3),(3,4),(3,5),(3,6),(3,7),
       (4,0),(4,1),(4,2),(4,3),(4,4),(4,5),(4,6),(4,7),(5,0),(5,1),(5,2),(5,3),(5,4),(5,5),(5,6),(5,7),
       (6,0),(6,1),(6,2),(6,3),(6,4),(6,5),(6,6),(6,7),(7,0),(7,1),(7,2),(7,3),(7,4),(7,5),(7,6),(7,7)]


OPN, DEV, MID, END = 0, 1, 2, 3

DEPTH = 2

import numpy as np
from copy import deepcopy, copy
from random import shuffle
from collections import defaultdict as dd

try:
    from state import State 
    from features import Φ, H, RINGS, R0, R1, R2, R3, INF
    from opening import opening_book   
    from endgame import n_v_one, NvTwo

except:
    from voltage_mkII.state import State
    from voltage_mkII.features import Φ, H, RINGS, R0, R1, R2, R3, INF
    from voltage_mkII.opening import opening_book
    from voltage_mkII.endgame import n_v_one, NvTwo

class BasePlayer:
    def __init__(self, colour):
        self.colour = colour
        self.state = State()
        self.n_v_two = None
        self.θo = np.array([ 1.07056744e+01,  1.41208677e+01, -6.53668352e+00, -3.35785877e+00,
       -1.20037884e+01, -1.37354796e+01, -2.74993477e+00, -1.88674261e-01,
        1.29173001e+01,  9.78556120e+00, -5.68141809e-01, -7.83624696e+00,
        1.34433188e+01,  8.49171088e+00,  1.20301963e+01,  1.16467427e+01,
       -1.49482813e-04,  3.68559351e-04,  4.95622660e+01,  4.95626173e+01,
        1.19491384e+01,  5.38872116e+00,  3.20896341e+00,  1.67836223e+00,
        6.72166324e+00,  5.60184379e+00,  1.08830353e+01,  8.72204629e+00,
        1.02854911e+01,  5.74410104e+00,  2.78159338e+00,  1.41076491e+00,
        7.29031619e+00,  5.40839472e+00,  1.15680216e+01,  9.74674643e+00,
        1.09533871e+01,  1.09473091e+01,  8.50086200e+00,  1.25373616e+00,
        7.97317945e+00,  2.05456125e+00,  5.64520283e+00,  8.61272953e-01,
        5.31906145e+00,  9.25201407e-01,  4.18336976e+00,  3.85618387e+00,
        7.94530737e+00,  7.02607662e+00,  1.06796934e+01,  6.96115499e+00,
        2.76538406e+00,  7.79670474e+00,  7.09012745e+00,  1.25678158e+00,
        7.62242959e+00,  2.43009081e+00,  5.67510856e+00,  5.43391076e-01,
        4.65387676e+00,  1.04095923e+00,  4.09261707e+00,  2.96625926e+00,
        8.12594093e+00,  6.89938032e+00,  9.88661784e+00,  7.26896618e+00,
        2.25094228e+00,  7.08321031e+00, -1.48954682e+01,  2.33306027e+00,
        5.29707176e+00,  1.87230561e+00,  4.77961274e+00, -4.90235662e+00,
        1.76915857e+01,  1.62441386e+00, -5.91228827e-04, -2.84881374e-04,
        1.46916560e+01,  1.43212232e+00,  2.72693685e+00,  4.37476541e+00,
        3.53164663e-01,  1.37199276e+00,  2.98017479e+00,  3.48610429e+00,
       -5.55929374e-01,  7.24746983e+00,  5.53207064e+00,  4.73708326e+00,
        4.24062981e+00,  2.26119864e-01,  1.59872617e+00,  2.97737545e+00,
       -5.13021293e+00,  5.83382140e+00,  4.69169781e+00,  4.93192005e+00,
        3.61266860e+00,  1.02585641e+00,  1.12792699e+00,  4.72115681e-01,
       -4.95528499e+00,  2.65014299e+00,  8.15611700e+00,  4.78249661e+00,
        9.23792791e+00, -3.59700055e+00, -3.03894195e+00, -1.91933820e+00,
       -1.33844798e+00, -4.80837488e+00, -7.29581657e+00, -9.33193486e-02,
       -1.35431914e+01, -2.08103786e+00, -7.69102229e-01,  1.24110887e+00,
       -1.33016794e+00,  8.29861385e-02,  1.27338713e+01,  1.28803616e+00,
        8.59735937e+00,  1.73085784e-01, -7.41337650e-01,  6.19711140e-01,
       -8.45553225e+00,  3.93031741e+00,  9.51164543e+00,  1.21342759e+00,
        7.27921802e+00,  2.83947585e+00,  9.19277108e+00,  2.88942744e+00,
        8.75741954e+00, -2.92758282e-04,  4.35598964e-04, -9.45877121e-04,
       -9.61504603e-04,  1.10916061e+01,  3.84725069e+01,  1.10909201e+01,
        3.84723494e+01,  1.78582653e+00,  1.01617264e+01,  9.72042675e-01,
        4.41673236e+00,  7.24126405e-01,  2.48542634e+00,  5.45349402e-02,
        1.62420695e+00,  8.90357898e-01,  5.83216814e+00,  1.85858871e-01,
        5.41690945e+00,  1.15365943e+00,  9.72999218e+00,  1.07859160e+00,
        7.64141856e+00,  1.93558127e+00,  8.35094866e+00,  1.43416223e+00,
        4.30908030e+00,  7.92516143e-01,  1.98866125e+00,  3.32593656e-02,
        1.37724224e+00,  1.77329692e+00,  5.51955629e+00,  3.18412234e-01,
        5.09044956e+00,  2.71473706e+00,  8.85418049e+00,  1.53227897e+00,
        8.21514763e+00,  1.94421655e+00,  9.00757318e+00,  2.50142116e+00,
        8.44630430e+00,  1.63028431e+00,  6.87146224e+00, -2.83929232e-01,
        1.53834489e+00,  1.00005557e+00,  6.97343667e+00, -1.91030084e-01,
        2.24528423e+00,  9.29293381e-01,  4.71605040e+00, -3.43588708e-01,
        1.20406334e+00,  1.17478424e+00,  4.14535013e+00, -1.43899734e-01,
        1.07028208e+00,  7.60045167e-01,  3.42340693e+00,  4.51804894e-01,
        3.40405717e+00,  1.88829780e+00,  6.05741355e+00,  1.19569593e+00,
        5.83024543e+00,  2.84786268e+00,  7.83063440e+00,  1.14137883e+00,
        5.81848222e+00,  1.80609723e-01,  2.58453173e+00,  1.40507553e+00,
        6.39265420e+00,  1.03495685e+00,  6.05467156e+00, -2.65959372e-01,
        1.52295477e+00,  1.05612646e+00,  6.56715882e+00, -1.19594809e-01,
        2.55140336e+00,  1.46636771e+00,  4.20886528e+00, -4.37301636e-01,
        9.79399322e-01,  1.29505201e+00,  3.35856602e+00, -2.59056121e-01,
        1.30034410e+00,  7.45484662e-01,  3.34648336e+00,  4.32120940e-01,
        2.53526909e+00,  2.04450466e+00,  6.08153741e+00,  1.05155502e+00,
        5.84569399e+00,  2.93034520e+00,  6.95571939e+00,  1.60721328e+00,
        5.66084909e+00,  9.77901363e-02,  2.15464821e+00,  1.65729462e+00,
        5.42634571e+00, -2.52670843e+00, -1.23680885e+01,  1.65707780e+00,
        5.75803718e-01,  1.21933215e+00,  3.87829922e+00,  1.92964192e+00,
       -1.57680192e-01,  1.61064560e+00,  3.06905327e+00, -6.17998758e-01,
       -4.28483963e+00,  4.69793499e+00,  1.29954778e+01,  7.32588300e-01,
        8.90462320e-01,  4.76271169e-04,  6.05273405e-04, -2.73607773e-04,
        2.63611934e-04,  3.26893253e+00,  1.14214410e+01,  6.70144775e-01,
        7.60999049e-01,  9.87186819e-01,  1.74094845e+00,  1.42758011e+00,
        2.94769917e+00,  8.48629074e-01, -4.95007920e-01,  7.60171102e-01,
        6.11978919e-01,  1.83778865e+00,  1.14242705e+00,  2.36217994e+00,
        1.12594141e+00,  3.07447500e-01, -8.65097949e-01,  1.91626574e+00,
        5.33297574e+00,  1.39172020e+00,  4.14115286e+00,  1.29818296e+00,
        3.43866537e+00,  1.21794341e+00,  3.02351928e+00,  2.09013689e-01,
        1.78244714e-02,  8.72668143e-01,  7.25451156e-01,  1.80699854e+00,
        1.17177134e+00, -1.22410542e+00, -3.90587178e+00,  1.30184430e+00,
        4.53279516e+00,  1.27721966e+00,  3.41649703e+00,  1.90183178e+00,
        3.02889116e+00,  1.55486666e+00,  2.05839966e+00,  3.12969827e-01,
        7.11374452e-01,  1.29207398e+00, -1.63652553e-01,  1.10714690e+00,
       -6.34308944e-01, -1.55950849e+00, -3.39624993e+00])

        self.θd = np.array([ 5.80915490e+00,  8.62529913e+00, -9.87712057e+00, -6.82349644e+00,
       -4.88277589e+00,  1.25992500e+00, -2.42777859e+00,  3.57408254e+00,
        5.30427079e+00,  3.45038589e+00, -1.23192742e+00,  7.42595015e-01,
        7.91564624e+00,  6.31765004e+00,  8.23242306e+00,  7.73555394e+00,
       -1.49482813e-04,  3.68559351e-04,  2.91284038e+01,  2.91287551e+01,
        6.45308543e-01, -2.02678072e+00,  6.83124254e-01, -1.51838483e-01,
        3.20235783e+00,  1.29647350e-01,  4.57354889e+00, -9.35123056e-01,
        1.85913588e+00,  3.68748332e+00,  6.42643855e-01, -1.39940581e-01,
        3.41384331e+00,  1.31584392e-01,  5.37400371e+00, -4.14129510e-01,
        3.08951759e+00,  5.41447700e+00,  3.80206689e+00, -2.80863599e-01,
        4.56356480e+00, -4.13285550e-01,  3.84491506e+00, -2.11240873e-01,
        2.61435155e+00, -2.42175178e-01,  1.45720961e+00, -2.16412640e-01,
        2.49913364e+00,  1.50153761e+00,  5.76977246e+00,  1.46173530e+00,
        6.20174879e-01,  2.01873800e+00,  2.18137241e+00, -5.14101089e-01,
        3.63449507e+00, -4.42090517e-01,  3.27808114e+00, -4.47053714e-01,
        2.22121220e+00, -5.02287442e-01,  1.19622434e+00, -2.17665201e-01,
        2.56312560e+00,  1.49541399e+00,  5.18503524e+00,  1.18530023e+00,
        3.50896982e-01,  1.78306974e+00,  7.47283324e-01,  5.99489032e+00,
        4.96727413e+00,  4.61789630e+00,  8.09147467e+00, -2.14064580e+00,
        2.64848384e+00,  1.49550027e+00, -5.91228827e-04, -2.84881374e-04,
        8.52234179e+00,  8.36483878e-01,  2.97313082e+00,  5.58618669e+00,
        5.50854504e+00,  7.83748734e-01,  3.28265870e+00,  5.88592183e+00,
        5.68386060e+00,  4.08327449e+00,  4.92828791e+00,  4.15690218e+00,
        2.75616316e+00,  1.67255622e+00,  1.39927866e+00,  5.30769537e+00,
       -1.29896036e+00,  2.69594902e+00,  4.26085218e+00,  3.72533742e+00,
        2.72325072e+00,  1.41338814e+00,  1.47904268e+00,  4.60027485e+00,
       -1.43296204e+00,  5.93011789e+00, -2.03774155e-02,  8.61795196e+00,
       -9.30959684e-02, -6.19168211e+00, -3.78469743e+00, -2.67745244e+00,
       -4.04597142e+00, -4.33999340e+00, -6.43185544e-01,  3.87215040e+00,
       -2.51325649e+00, -1.77189880e+00, -7.56085107e-01,  5.44486101e+00,
       -1.77116328e+00,  5.14187340e+00,  6.19547831e-02,  4.72242145e+00,
       -1.17220123e+00, -1.95212239e+00,  7.20084914e-01,  7.25991651e-02,
        6.70421699e-01,  7.53768726e+00,  3.76603017e-01,  6.60067256e+00,
       -2.82087798e-01,  8.61339245e+00, -3.78918760e-01,  8.31519735e+00,
       -5.79539080e-01, -2.92758282e-04,  4.35598964e-04, -9.45877121e-04,
       -9.61504603e-04,  1.97351753e+01,  9.39507546e+00,  1.97344894e+01,
        9.39491796e+00,  2.10701948e+00, -1.46329650e+00,  3.07961338e+00,
       -5.10634022e+00,  7.08303855e-01, -2.45902737e-02, -8.48515032e-02,
       -6.66073253e-02,  3.07839065e+00,  1.24829984e-01, -4.54234625e-02,
        1.75995345e-01,  4.38325330e+00,  1.90911925e-01,  2.43100166e-01,
       -1.18025935e+00,  2.48946795e+00, -6.29293235e-01,  4.94066394e+00,
       -1.25403913e+00,  6.92293581e-01, -5.00657065e-02, -8.48012195e-02,
       -5.54026728e-02,  3.32954303e+00,  8.68372970e-02, -3.16143122e-02,
        1.63665784e-01,  5.22492584e+00,  1.49973820e-01,  3.61700676e-01,
       -7.75150015e-01,  3.74035858e+00, -6.52438389e-01,  6.38256522e+00,
       -9.67671904e-01,  3.86936691e+00, -6.64154682e-02,  1.97095502e-01,
       -4.77279608e-01,  4.76328411e+00, -1.99406522e-01,  2.15353834e-01,
       -6.28946489e-01,  3.74072636e+00,  1.04329646e-01,  1.92861664e-01,
       -4.04900855e-01,  2.69995714e+00, -8.45326602e-02, -9.63973938e-02,
       -1.44596842e-01,  1.57664171e+00, -1.19349761e-01, -1.71699093e-01,
       -4.50353496e-02,  2.19859331e+00,  3.00944311e-01,  1.56039664e+00,
       -5.89942823e-02,  5.65816738e+00,  1.10408737e-01,  1.94317763e+00,
       -4.82736265e-01,  9.04579011e-01, -2.84646732e-01,  2.38143585e+00,
       -3.61672865e-01,  2.33514690e+00, -1.54273527e-01,  3.68239237e-02,
       -5.50711194e-01,  3.95927373e+00, -3.23922976e-01,  1.22212598e-01,
       -5.62585370e-01,  3.27835325e+00, -1.47683572e-04,  1.04554536e-01,
       -5.52901640e-01,  2.41933786e+00, -1.98384393e-01, -2.61820279e-01,
       -2.40138415e-01,  1.42930837e+00, -2.33733085e-01, -2.76975682e-01,
        6.04412471e-02,  2.11413822e+00,  4.49088521e-01,  1.55386395e+00,
       -6.05812704e-02,  5.09478549e+00,  8.96964948e-02,  1.72610990e+00,
       -5.41713479e-01,  7.71888408e-01, -4.19495351e-01,  2.21542263e+00,
       -4.31922871e-01,  7.68166225e-01, -2.02116842e-02,  5.58783207e+00,
        3.06879498e-01,  2.90741540e+00,  1.86041833e+00,  3.47428816e+00,
        1.04326424e+00,  6.85020926e+00,  1.14135154e+00, -1.99715527e+00,
       -1.43972293e-01,  1.94363045e+00,  7.06680463e-01,  1.34572385e+00,
        1.48413174e-01,  4.76271169e-04,  6.05273405e-04, -2.73607773e-04,
        2.63611934e-04,  4.77113103e+00,  3.74992826e+00,  7.93708669e-01,
        4.17967099e-02,  3.12317806e+00, -1.48848814e-01,  4.31600131e+00,
        1.27069924e+00,  4.71129344e+00,  7.97708093e-01,  7.78009125e-01,
        5.89686681e-03,  3.46073746e+00, -1.78037839e-01,  5.06154605e+00,
        8.26392835e-01,  5.19360125e+00,  4.88538271e-01,  3.67432360e+00,
        4.10722532e-01,  4.44290314e+00,  4.86187201e-01,  3.64874100e+00,
        5.07926243e-01,  2.69561397e+00,  6.13820779e-02,  1.74911421e+00,
       -7.58397015e-02,  1.04045015e+00,  3.58221633e-01,  4.71550444e+00,
        5.93585355e-01, -1.37649645e+00,  7.77718249e-02,  2.29925105e+00,
        3.97516038e-01,  3.93855953e+00,  3.24311534e-01,  3.17196116e+00,
        5.52179159e-01,  2.68191667e+00,  4.19317592e-02,  1.70589016e+00,
       -2.94014155e-01,  9.59398608e-01,  5.20138502e-01,  3.96813852e+00,
        6.32858602e-01, -1.44353823e+00,  1.01027473e-02])

        self.θm = np.array([ 2.59709552e+00,  4.49330117e+00, -1.06333275e+01, -9.30588825e+00,
       -2.53926991e+00, -3.37227525e-01, -1.62663844e+00,  7.34956646e-01,
        4.00350951e+00,  1.21052136e+00, -1.38246828e+00, -3.15632840e-01,
        3.95872313e+00,  2.78106559e+00,  4.57640715e+00,  4.30927587e+00,
       -1.49482813e-04,  3.68559351e-04,  2.37771074e+01,  2.37774586e+01,
       -3.92889721e-01, -1.96284342e+00,  1.69055541e-01, -8.60584131e-03,
        1.09470889e+00,  8.93975464e-02,  1.85580747e+00, -8.43374956e-01,
        1.10997736e+00,  1.91019787e+00,  1.65313707e-01,  1.48318466e-03,
        1.11759937e+00,  7.51945830e-02,  2.39751687e+00, -2.20739436e-01,
        1.40766554e+00,  2.29536230e+00,  2.26093781e+00, -5.59505412e-01,
        1.19288430e+00, -5.50694697e-01,  2.22712940e+00,  3.99429273e-02,
        9.12188724e-01, -1.75642616e-01,  3.03323203e-01,  4.82330633e-01,
        1.12615712e+00,  6.78464315e-01,  2.11508490e+00,  3.94494968e-01,
       -6.26551581e-02,  1.67434508e+00,  1.40956621e+00, -8.24320903e-01,
        7.37036195e-01, -6.47298799e-01,  2.16366564e+00, -1.39905919e-01,
        7.60555813e-01, -3.65625236e-01,  1.99173204e-01,  4.55960462e-01,
        8.93638408e-01,  4.64889018e-01,  1.23435978e+00,  4.16384995e-02,
       -2.02651149e-01,  1.46049777e+00,  1.27564100e+00,  2.95885874e+00,
        4.16947317e+00,  3.96352996e+00,  4.84036668e+00, -1.26762087e+00,
        1.28745730e+00,  1.20755335e+00, -5.91228827e-04, -2.84881374e-04,
        6.20384823e+00,  1.79182523e-01,  9.42610064e-01,  3.89624052e+00,
        2.35126832e+00,  1.64994820e-01,  1.04280458e+00,  3.86362364e+00,
        2.96359571e+00,  2.82078721e+00,  1.66217705e+00,  2.05708695e+00,
        1.08746777e+00, -1.80073464e-01,  4.49375439e-01,  2.84174421e+00,
       -1.53739749e+00,  2.23436263e+00,  1.28369402e+00,  2.30377412e+00,
        1.12593212e+00, -2.57288661e-01,  4.30115768e-01,  2.29326112e+00,
       -1.56393821e+00,  3.20740185e+00, -5.09720754e-01,  4.88030164e+00,
       -4.87443604e-01, -6.01588885e+00, -4.71669759e+00, -4.48109320e+00,
       -4.72472247e+00, -1.37290358e+00, -1.26676938e+00,  2.60762104e+00,
       -2.84587965e+00, -4.60646824e-01, -1.26619693e+00,  2.91633342e+00,
       -2.08176158e+00,  3.83449463e+00,  6.85722730e-02,  2.54189805e+00,
       -1.23154237e+00, -1.48692452e+00,  1.04346183e-01, -5.68633450e-02,
       -2.58343646e-01,  4.44107348e+00, -4.83706318e-01,  3.52011928e+00,
       -7.38118966e-01,  4.93790586e+00, -3.59448089e-01,  4.88798820e+00,
       -5.78607994e-01, -2.92758282e-04,  4.35598964e-04, -9.45877121e-04,
       -9.61504603e-04,  1.51040266e+01,  8.67492782e+00,  1.51033406e+01,
        8.67477032e+00,  1.12726598e+00, -1.52174126e+00,  1.61553454e+00,
       -3.57832408e+00,  1.42453683e-01,  2.71911843e-02, -7.49389657e-02,
        6.67127790e-02,  9.07750753e-01,  1.87820941e-01,  1.63404114e-01,
       -7.30820350e-02,  2.11835631e+00, -2.61932513e-01,  8.33499272e-01,
       -1.67891036e+00,  1.96075983e+00, -8.49743646e-01,  2.78831943e+00,
       -8.78980058e-01,  1.42444637e-01,  2.24530904e-02, -7.08221498e-02,
        7.20420233e-02,  9.23535124e-01,  1.96601271e-01,  1.30185833e-01,
       -5.45241697e-02,  2.66844149e+00, -2.70028670e-01,  8.49226017e-01,
       -1.06928528e+00,  2.25183466e+00, -8.45766522e-01,  3.07748003e+00,
       -7.81701405e-01,  2.49079438e+00, -2.28972027e-01, -1.28046001e-02,
       -5.46021318e-01,  1.03219491e+00,  1.61002172e-01,  9.75285829e-02,
       -6.48530386e-01,  2.06018732e+00,  1.67083032e-01,  8.71652821e-02,
       -4.80206729e-02,  8.98913219e-01,  1.43484307e-02,  1.70756418e-01,
       -3.45218092e-01,  4.92478197e-01, -1.89072660e-01,  5.18433983e-01,
       -3.64251522e-02,  9.00058696e-01,  2.26502404e-01,  8.22011832e-01,
       -1.43682775e-01,  2.36726167e+00, -2.53373115e-01,  1.19229750e+00,
       -7.99096473e-01,  1.24931300e-01, -1.87829059e-01,  1.61183451e+00,
        6.35355639e-02,  1.79850949e+00, -3.89442325e-01, -1.31034735e-01,
       -6.93072349e-01,  6.24341571e-01,  1.13550315e-01, -5.84464152e-02,
       -5.87134639e-01,  1.99945487e+00,  1.64335199e-01,  1.11187697e-02,
       -1.52318078e-01,  7.93503815e-01, -3.32067324e-02,  1.28624513e-01,
       -4.93921000e-01,  4.69873776e-01, -2.71349620e-01,  5.39043934e-01,
       -8.19527062e-02,  7.54626348e-01,  1.39113198e-01,  6.60029929e-01,
       -1.97272220e-01,  1.77050303e+00, -5.36696503e-01,  7.75642078e-01,
       -7.34907389e-01,  4.91906602e-02, -2.50345735e-01,  1.45854963e+00,
        2.37815405e-03,  1.28903182e+00, -1.27196071e-02,  2.27032302e+00,
        5.88356973e-01,  2.50337614e+00,  1.46665664e+00,  2.77615046e+00,
        1.08703561e+00,  3.67946773e+00,  1.06098508e+00, -1.32998191e+00,
        6.18792772e-02,  4.22328938e-01,  8.66955429e-01,  1.01603778e+00,
        1.90152334e-01,  4.76271169e-04,  6.05273405e-04, -2.73607773e-04,
        2.63611934e-04,  3.19378452e+00,  3.00878121e+00,  2.17945960e-01,
       -3.97419365e-02,  6.80588969e-01,  2.63219523e-01,  2.61180263e+00,
        1.28495176e+00,  2.15736136e+00,  1.94363446e-01,  2.14181111e-01,
       -4.90290323e-02,  7.92929408e-01,  2.49916089e-01,  3.04416462e+00,
        8.21476072e-01,  2.86047017e+00,  1.01404469e-01,  2.50565118e+00,
        3.16907684e-01,  9.34477698e-01,  7.28501779e-01,  1.84305256e+00,
        2.13799447e-01,  7.27416234e-01,  3.60884419e-01, -2.51823697e-02,
       -1.54172798e-01,  8.03003484e-02,  3.68468218e-01,  2.21670291e+00,
        6.26435720e-01, -1.28654282e+00, -2.50618931e-01,  1.93047230e+00,
        3.04708395e-01,  6.84286376e-01,  6.01426530e-01,  1.98649853e+00,
        3.16078480e-01,  6.65637830e-01,  4.60892005e-01, -6.95640523e-02,
       -1.89236738e-01,  9.37207557e-02,  3.36889446e-01,  1.89432387e+00,
        3.99659514e-01, -1.30936298e+00, -2.55048662e-01])

        self.θe = np.array([ 1.18465545e+01,  1.31674919e+01, -1.20282757e+01, -1.07291685e+01,
        9.13378047e+00,  9.48845463e+00,  6.89961415e+00,  7.44031569e+00,
        1.28047733e+01,  1.04369690e+01,  9.10150759e-01,  2.95340192e+00,
        1.60837267e+01,  1.50373886e+01,  1.57883540e+01,  1.53829056e+01,
       -3.15898663e-01, -2.46629239e-01,  3.46565281e+01,  3.46568794e+01,
        3.38720162e+00, -1.17086178e+00, -1.28722504e-01, -6.34399591e-02,
        3.97096396e-01,  3.47334034e-01,  6.10650322e+00,  3.51739788e+00,
        8.71827072e+00,  9.21492020e+00, -1.07026406e-01, -6.34025488e-02,
        3.94310583e-01,  3.46063546e-01,  5.79008631e+00,  2.93036701e+00,
        6.00619088e+00,  6.97426773e+00,  1.63210066e+00, -1.32598031e+00,
        1.95061501e+00, -4.78611593e-01,  9.91013712e-01,  7.91696924e-01,
        6.33993002e-01,  6.04864855e-01,  1.38090569e+00,  1.26706570e+00,
        5.60799396e+00,  5.72099816e+00,  8.20851795e+00,  4.69194610e+00,
        3.14229827e+00,  4.06311592e+00,  1.48314120e-01, -2.30716885e+00,
        8.67066644e-01, -1.62482092e+00,  8.22528975e-01,  7.88981312e-01,
        3.59215792e-01,  4.30371003e-01,  1.16207073e+00,  1.20149219e+00,
        6.79196762e+00,  6.91822815e+00,  6.57646801e+00,  2.82265031e+00,
        3.11612401e+00,  3.69224126e+00, -7.89085258e-01,  1.78930967e+00,
        2.96692864e+00,  4.42217462e+00,  1.39702532e+00, -2.04403659e+00,
        2.29687197e+00, -8.12295287e-01, -1.49662206e+00, -2.84881374e-04,
        6.70991370e+00, -6.37614043e-02,  5.01827073e-02,  2.67636482e+00,
        2.72941068e-02, -4.24595595e-02,  4.86468259e-02,  2.93348960e+00,
        2.05538829e+00,  2.95842496e+00,  2.56997454e+00,  1.65119961e-01,
        2.87645759e-02,  1.12773948e-01, -1.81729409e-01,  2.73170797e+00,
       -9.97346193e-01,  2.45595849e+00,  2.54378540e+00,  3.37502314e-02,
       -7.14041357e-02, -3.99228612e-02, -2.15629452e-01,  3.11388163e+00,
       -8.04504893e-01,  6.97244873e+00,  4.97469134e+00,  7.22531472e+00,
        5.84173403e+00, -7.32333969e+00, -4.75542206e+00, -3.99692802e+00,
       -6.58838696e+00,  4.61837778e+00,  4.42329627e+00,  5.89641762e+00,
        3.69100591e+00,  3.94857181e+00,  2.85872262e+00,  4.66493160e+00,
        2.87499929e+00,  8.83355824e+00,  3.87077244e+00,  3.74085100e+00,
        6.79595232e+00,  8.12826684e-01,  9.72140186e-02, -1.59951714e-02,
        2.96982294e+00,  8.61847385e+00,  7.46389684e+00,  8.69917257e+00,
        6.33915074e+00,  8.95286211e+00,  6.83754253e+00,  8.63258989e+00,
        6.75042005e+00, -3.90800751e-01,  7.51944114e-02, -4.38246690e-01,
        1.89341510e-01,  1.81969891e+01,  1.63951045e+01,  1.81963031e+01,
        1.63949470e+01,  1.52906979e+00,  1.87695515e+00,  1.58010899e+00,
       -2.75091689e+00, -7.50783615e-02, -5.30548160e-02, -4.40292545e-02,
       -1.90310500e-02,  8.67164344e-03,  3.89287560e-01,  1.11794212e-01,
        2.36464355e-01,  4.48043306e+00,  1.63371078e+00,  1.47594926e+00,
        2.03941250e+00,  5.64942487e+00,  3.06988469e+00,  4.92394767e+00,
        4.29011402e+00, -5.35168328e-02, -5.39255535e-02, -4.42182119e-02,
       -1.94476481e-02,  6.43129596e-03,  3.90416307e-01,  1.11590106e-01,
        2.34940520e-01,  4.48173520e+00,  1.31343059e+00,  1.05361922e+00,
        1.87742796e+00,  4.22289934e+00,  1.78169414e+00,  4.07154263e+00,
        2.90314142e+00,  1.68592295e+00, -5.29377355e-02, -9.72904070e-01,
       -3.52396741e-01,  1.57458779e+00,  3.76340014e-01,  2.14962757e-01,
       -6.93881456e-01,  7.55841819e-01,  2.35312839e-01,  2.95056188e-01,
        4.95842418e-01,  5.56572913e-01,  7.84930155e-02,  1.07062926e-01,
        4.98982871e-01,  1.76138134e+00, -3.80393315e-01,  1.94076458e-01,
        1.07266744e+00,  3.46900711e+00,  2.13939083e+00,  2.09888854e+00,
        3.62197437e+00,  5.61600840e+00,  2.59131321e+00,  2.05871382e+00,
        2.63193835e+00,  1.40377498e+00,  1.73828069e+00,  2.87021906e+00,
        1.19392185e+00,  1.08450154e+00, -9.36686456e-01, -1.58307125e+00,
       -7.23883776e-01,  8.51179629e-01,  2.25335439e-02,  5.11529638e-02,
       -1.67425613e+00,  6.96179679e-01,  1.26473728e-01,  1.35448232e-01,
        6.52239690e-01,  3.91896956e-01, -3.29398937e-02, -1.58216287e-02,
        4.46521380e-01,  1.75807956e+00, -5.96657877e-01,  2.02678253e-01,
        9.99944702e-01,  4.34010019e+00,  2.45196857e+00,  2.31741045e+00,
        4.59868639e+00,  4.20081485e+00,  2.37509991e+00,  1.57593047e+00,
        1.24581603e+00,  1.34352846e+00,  1.77409162e+00,  2.57926826e+00,
        1.11340302e+00,  2.34085955e+00, -3.12927359e+00,  4.12169245e+00,
       -2.43256153e+00,  8.18763364e+00, -5.42012085e+00,  6.25994735e+00,
       -1.93809208e+00,  6.16026715e+00, -4.86315570e+00,  9.28901116e-01,
       -2.97341947e+00, -2.65842545e+00,  4.95712449e+00,  2.07706988e-01,
       -1.02136552e+00, -3.60586339e-01, -1.13436295e+00, -2.73607773e-04,
        2.63611934e-04,  3.98010662e+00,  2.73694370e+00, -3.04957959e-02,
       -3.42441078e-02, -1.03758618e-01,  1.55139752e-01,  3.38136432e+00,
       -7.04485632e-01,  2.77229542e+00, -2.74454482e+00, -8.38429674e-03,
       -3.39180049e-02, -1.05578693e-01,  1.54266435e-01,  3.80713614e+00,
       -8.71629480e-01,  2.36352198e+00, -3.09854762e-01,  2.66087921e+00,
        2.99317399e-01,  1.55418308e+00,  1.01659389e+00,  3.61661937e-01,
       -1.96776916e-01,  4.48769419e-01, -4.19171960e-01,  1.56807829e+00,
       -1.45458605e+00,  1.16936647e+00, -1.35170276e+00,  3.75953492e+00,
       -1.02643253e+00, -1.30120478e+00,  3.04094331e-01,  2.66850086e+00,
       -2.11724308e-01,  9.53023196e-01,  1.59753125e+00,  5.58893883e-01,
       -5.26340759e-01,  4.08477112e-01, -4.79283536e-01,  1.55500741e+00,
       -1.59644240e+00,  2.02181408e+00, -2.23694910e+00,  2.99252746e+00,
        1.22076439e-01, -1.14110707e+00,  3.36128743e-01])

    def action(self):
        if self.state.turn < 8:
            try:
                if str(self.state.board) in opening_book:
                    return tuple(opening_book[str(self.state.board)])

            except:
                print('Failed to get opening move')
                assert(False)
        
        # n v one endgame
        if self.state.board[self.state.board < 0].sum() == -1 and self.state.board[self.state.board > 0].sum() > 1:
            return self.format_action(n_v_one(self.state))

        # n v two endgame
        if self.state.board[self.state.board < 0].sum() == -2 and self.state.board[self.state.board > 0].sum() > 2:
            if self.n_v_two is None:
                self.n_v_two = NvTwo()
            return self.format_action(self.n_v_two.move(self.state))


        actions = []
        depth = DEPTH
        if self.state.stage[0] == OPN:
            θ = self.θo
        elif self.state.stage[0] == DEV:
            θ = self.θd
        elif self.state.stage[0] == MID:
            θ = self.θm
        else:
            θ = self.θe
            depth = 2*depth


        alpha, beta, v = -INF, INF, -INF
        for a in self.state.actions():
            child = self.state.result(a)
            #child.board *= -1
            nmax = (-self.negamax(child, -beta, -alpha, depth-1, θ))
            actions.append((nmax, a))
            v = max(v, nmax)
            alpha = max(alpha, v)
        
        return self.format_action(max(actions)[1])

    def update(self, colour, action):    
        self.state = self.state.result(action) 
        # invert the sign of the pieces so that positive has the next move
        #self.state.board = -1*self.state.board

    def format_action(self, action):
        if action[0] == BOOM:
            move, orig = action
            statement = (BOOM, orig)
        else:
            move, n, orig, dest = action
            statement = (MOVE, n, orig, dest)
        return statement


    def negamax(self, state, alpha, beta, depth, θ):
        if state.stages_terminal_test():
            return state.utility()
        if depth == 0:
            return H(Φ(state), θ)

        v = -INF
        for a in state.actions():
            child = state.result(a)
            v = max(v, -self.negamax(child, -beta, -alpha, depth-1, θ))
            if v >= beta:
                return v
            alpha = max(alpha, v)
            
        return v



def H(features, θ):
    h = np.dot(features, θ)
    if h > 0.99*INF:
        return 0.99*INF
    if h < -0.99*INF:
        return -0.99*INF
    return h
